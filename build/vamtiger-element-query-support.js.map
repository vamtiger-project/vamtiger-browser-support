{"version":3,"file":"vamtiger-element-query-support.js","sources":["../source/types.ts","../source/vamtiger-element-query-support.ts"],"sourcesContent":["import * as VamtigerBrowserMethodTypes from 'vamtiger-browser-method/build/types';\nimport * as AWS from 'aws-sdk';\n\nexport enum StringConstant {\n    nothing = '',\n    build = 'build',\n    vamtiger = 'vamtiger',\n    slash = '/',\n    jsExtension = '.js',\n    bashAnd = '&&',\n    arn = 'arn',\n    sns = 'sns',\n    aws = 'aws',\n    colon = ':',\n    hyphen = '-',\n    'vamtiger-contact' = 'vamtiger-contact',\n    '5e5164d3' = '5e5164d3',\n    cc71 = 'cc71',\n    '4e5b' = '4e5b',\n    '9c34' = '9c34',\n    '042fe735f31c' = '042fe735f31c'\n}\n\nexport enum Region {\n    usWest2= 'us-west-2'\n}\n\nexport enum ElmentName {\n    meta = 'meta',\n    script = 'script'\n}\n\nexport enum ElementId {\n    vamtigerBrowserSupport = 'vamtiger-browser-support'\n}\n\nexport enum ElementAttribute {\n    id = 'id'\n}\n\nexport enum MetaElementAttribute {\n    baseUrl = 'baseUrl',\n    name = 'name',\n    url = 'url',\n    primary = 'primary',\n    loaded = 'loaded',\n    supported = 'supported',\n    unsupported = 'unsupported',\n    error = 'error',\n    polyfill = 'polyfill',\n    loadCritical = 'loadCritical',\n    load = 'load',\n    wait = 'wait'\n}\n\nexport enum MetaElementBrowserSupportAttribute {\n    es2015Support = 'data-es2015-support',\n    elementQuerySupport = 'data-element-query-support',\n    webComponentSupport = 'data-web-component-support',\n    fetchSupport = 'data-fetch-support',\n    awsSupport = 'data-aws-support',\n    contactSupport = 'data-contact-support'\n}\n\nexport enum Selector {\n    vamtigerBrowserSupportScript = 'script[src*=\"vamtiger-browser-support\"]',\n    vamtigerBrowserMethodJsonJs = '[src$=\"vamtiger-browser-method.js.json.js\"]',\n    vamtigerBrowserMethodJson = '[data-name$=\"vamtiger-browser-method.js.json\"]'\n}\n\nexport enum ScriptUrl {\n    vamtigerBrowserMethod = 'https://unpkg.com/vamtiger-browser-method/build/vamtiger-browser-method.js'\n}\n\nexport enum ErrorMessage {\n    notBrowser = 'This is not a web browser',\n    noFormForSelector = 'No Form for Selector',\n    noFieldInFormForSelector = 'No Field in Form for Selector'\n}\n\nexport enum NpmScript {\n    bundleSource = 'bundle-source'\n}\n\nexport enum SupportType {\n    primary = 'primary',\n    secondary = 'secondary'\n}\n\nexport enum LoadOnComplete {\n    loadCritical = 'loadCritical',\n    load = 'load'\n}\n\nexport enum VamtigerFormDataSupportFormFieldValue {\n    innerHTML = 'innerHTML'\n}\n\nexport enum DocumentDataAttribute {\n    touchSupport = 'vamtigerTouchSupport'\n}\n\nexport enum SupportFile {\n    elementQuery = 'vamtiger-element-query-support'\n}\n\nexport enum Polyfill {\n    elementQuery = 'https://unpkg.com/eqcss/EQCSS.min.js'\n}\n\nexport type LoadOnCompleteType  = keyof typeof LoadOnComplete;\n\nexport type Support = keyof typeof MetaElementBrowserSupportAttribute;\n\nexport type SupportTypeKey = keyof typeof SupportType;\n\nexport type StringObject = {[key: string]: string};\n\nexport type AnyObject = {[key: string]: any};\n\nexport type VamtigerSupportFile = 'vamtiger-es2015-support';\n\nexport type VamtigerFormDataSupportFormFieldValueKey = keyof typeof VamtigerFormDataSupportFormFieldValue;\n\nexport type VamtigerSupport =  {\n    [K in VamtigerSupportFile]?: IUpdateBrowserSupport;\n}\n\nexport type VamtigerContactResolve = (response: AWS.SNS.PublishResponse) => void;\n\nexport type VamtigerContactReject = (error: AWS.AWSError) => void;\n\nexport interface ISetBrowserSupportMetaElement {\n    support: Support;\n    primary?: boolean;\n}\n\nexport interface IUpdateBrowserSupport {\n    supportFile: string;\n    supported?: boolean;\n    polyfill?: string;\n    polyfills?: string[];\n    polyfillChain?: string[][]\n    wait?: boolean;\n    error?: string;\n}\n\nexport interface IUpdateBrowserSupportLoadScripts {\n    polyfills: IUpdateBrowserSupport['polyfills'];\n}\n\nexport interface IGetSupportUrls {\n    supportType: SupportType;\n}\n\nexport interface ILoadNextSupport {\n    supportType: SupportType;\n}\n\nexport interface IVamtigerContactParams {\n    template: string;\n    subject: string;\n    origin: string;\n}\n\nexport interface IVamtigerFormSupport {\n    form: string;\n    field?: IVamtigerFormSupportFormField;\n}\n\nexport interface IVamtigerFormSupportFormField {\n    selector: string;\n    name: string;\n    value?: VamtigerFormDataSupportFormFieldValueKey;\n}\n\ndeclare global {\n    interface Window extends VamtigerSupport {\n        [ElementId.vamtigerBrowserSupport]: HTMLMetaElement,\n        VamtigerBrowserSupport: (params: IUpdateBrowserSupport) => void;\n        VamtigerContact: (params: IVamtigerContactParams) => Promise<AWS.SNS.PublishResponse>;\n        _VamtigerContact_: (params: any) => void;\n        VamtigerForm: (params: IVamtigerFormSupport) => Promise<AnyObject>;\n        AWS: typeof AWS;\n    }\n}\n\nexport const supportTypes = Object.keys(SupportType) as SupportType[];\n\nexport const regex = {\n    leadingData: /^data/,\n    trailingSupport: /(.*?Support)(Primary)?$/,\n    supportScript: /vamtiger(-\\w+)+-(support|polyfill)/,\n    distTag: /(\\d|latest)$/\n}\n\nexport const stringConstant = Object.assign(StringConstant, {\n    365080655670: 365080655670\n});","import {\n    IUpdateBrowserSupport,\n    SupportFile,\n    Polyfill\n} from './types';\n\nconst { VamtigerBrowserSupport } = window;\nconst supportFile = SupportFile.elementQuery;\nconst polyfill = Polyfill.elementQuery;\nconst params = {\n    supportFile\n} as IUpdateBrowserSupport;\n\nif(window.hasOwnProperty('EQCSS')) {\n    params.supported = true;\n} else {\n    params.supported = false;\n    params.polyfill = polyfill;\n}\n\nVamtigerBrowserSupport(params);"],"names":["StringConstant","Region","ElmentName","ElementId","ElementAttribute","MetaElementAttribute","MetaElementBrowserSupportAttribute","Selector","ScriptUrl","ErrorMessage","NpmScript","SupportType","LoadOnComplete","VamtigerFormDataSupportFormFieldValue","DocumentDataAttribute","SupportFile","Polyfill","Object","assign","365080655670","VamtigerBrowserSupport","supportFile","elementQuery","polyfill","params","window","hasOwnProperty","supported"],"mappings":"yBAGA,IAAYA,EAoBAC,EAIAC,EAKAC,EAIAC,EAIAC,EAeAC,EASAC,EAMAC,EAIAC,EAMAC,EAIAC,EAKAC,EAKAC,EAIAC,EAIAC,EAIAC,GAvGZ,SAAYhB,GACRA,aACAA,gBACAA,sBACAA,YACAA,oBACAA,eACAA,YACAA,YACAA,YACAA,YACAA,aACAA,yCACAA,yBACAA,cACAA,iBACAA,iBACAA,iCAjBJ,CAAYA,IAAAA,OAoBZ,SAAYC,GACRA,sBADJ,CAAYA,IAAAA,OAIZ,SAAYC,GACRA,cACAA,kBAFJ,CAAYA,IAAAA,OAKZ,SAAYC,GACRA,oDADJ,CAAYA,IAAAA,OAIZ,SAAYC,GACRA,UADJ,CAAYA,IAAAA,OAIZ,SAAYC,GACRA,oBACAA,cACAA,YACAA,oBACAA,kBACAA,wBACAA,4BACAA,gBACAA,sBACAA,8BACAA,cACAA,cAZJ,CAAYA,IAAAA,OAeZ,SAAYC,GACRA,sCACAA,mDACAA,mDACAA,oCACAA,gCACAA,wCANJ,CAAYA,IAAAA,OASZ,SAAYC,GACRA,yEACAA,4EACAA,6EAHJ,CAAYA,IAAAA,OAMZ,SAAYC,GACRA,qGADJ,CAAYA,IAAAA,OAIZ,SAAYC,GACRA,yCACAA,2CACAA,2DAHJ,CAAYA,IAAAA,OAMZ,SAAYC,GACRA,+BADJ,CAAYA,IAAAA,OAIZ,SAAYC,GACRA,oBACAA,wBAFJ,CAAYA,IAAAA,OAKZ,SAAYC,GACRA,8BACAA,cAFJ,CAAYA,IAAAA,OAKZ,SAAYC,GACRA,wBADJ,CAAYA,IAAAA,OAIZ,SAAYC,GACRA,sCADJ,CAAYA,IAAAA,OAIZ,SAAYC,GACRA,gDADJ,CAAYA,IAAAA,OAIZ,SAAYC,GACRA,sDADJ,CAAYA,IAAAA,OA0FkBC,OAAOC,OAAOlB,GACxCmB,aAAc,eAVlB,ICrLQC,gCACFC,EAAcN,EAAYO,aAC1BC,EAAWP,EAASM,aACpBE,GACFH,eAGDI,OAAOC,eAAe,SACrBF,EAAOG,WAAY,GAEnBH,EAAOG,WAAY,EACnBH,EAAOD,SAAWA,GAGtBH,EAAuBI"}