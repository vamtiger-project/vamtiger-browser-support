{"version":3,"file":"vamtiger-contact-polyfill.js","sources":["../source/types.ts","../source/config.ts","../source/vamtiger-contact-polyfill.ts"],"sourcesContent":["import * as VamtigerBrowserMethodTypes from 'vamtiger-browser-method/build/types';\nimport * as AWS from 'aws-sdk';\n\nexport enum StringConstant {\n    nothing = '',\n    build = 'build',\n    vamtiger = 'vamtiger',\n    slash = '/',\n    jsExtension = '.js',\n    bashAnd = '&&',\n    arn = 'arn',\n    sns = 'sns',\n    aws = 'aws',\n    colon = ':',\n    hyphen = '-',\n    'vamtiger-contact' = 'vamtiger-contact',\n    '5e5164d3' = '5e5164d3',\n    cc71 = 'cc71',\n    '4e5b' = '4e5b',\n    '9c34' = '9c34',\n    '042fe735f31c' = '042fe735f31c'\n}\n\nexport enum Region {\n    usWest2= 'us-west-2'\n}\n\nexport enum ElmentName {\n    meta = 'meta',\n    script = 'script'\n}\n\nexport enum ElementId {\n    vamtigerBrowserSupport = 'vamtiger-browser-support'\n}\n\nexport enum ElementAttribute {\n    id = 'id'\n}\n\nexport enum MetaElementAttribute {\n    baseUrl = 'baseUrl',\n    name = 'name',\n    url = 'url',\n    primary = 'primary',\n    loaded = 'loaded',\n    supported = 'supported',\n    unsupported = 'unsupported',\n    error = 'error',\n    polyfill = 'polyfill',\n    loadCritical = 'loadCritical',\n    load = 'load',\n    wait = 'wait'\n}\n\nexport enum MetaElementBrowserSupportAttribute {\n    es2015Support = 'data-es2015-support',\n    elementQuerySupport = 'data-element-query-support',\n    webComponentSupport = 'data-web-component-support',\n    fetchSupport = 'data-fetch-support',\n    awsSupport = 'data-aws-support',\n    contactSupport = 'data-contact-support'\n}\n\nexport enum Selector {\n    vamtigerBrowserSupportScript = 'script[src*=\"vamtiger-browser-support\"]'\n}\n\nexport enum ErrorMessage {\n    notBrowser = 'This is not a web browser',\n    noFormForSelector = 'No Form for Selector',\n    noFieldInFormForSelector = 'No Field in Form for Selector'\n}\n\nexport enum NpmScript {\n    bundleSource = 'bundle-source'\n}\n\nexport enum SupportType {\n    primary = 'primary',\n    secondary = 'secondary'\n}\n\nexport enum LoadOnComplete {\n    loadCritical = 'loadCritical',\n    load = 'load'\n}\n\nexport enum VamtigerFormDataSupportFormFieldValue {\n    innerHTML = 'innerHTML'\n}\n\nexport enum DocumentDataAttribute {\n    touchSupport = 'vamtigerTouchSupport'\n}\n\nexport enum SupportFile {\n    elementQuery = 'vamtiger-element-query-support'\n}\n\nexport enum Polyfill {\n    elementQuery = 'https://unpkg.com/eqcss/EQCSS.min.js'\n}\n\nexport type LoadOnCompleteType  = keyof typeof LoadOnComplete;\n\nexport type Support = keyof typeof MetaElementBrowserSupportAttribute;\n\nexport type SupportTypeKey = keyof typeof SupportType;\n\nexport type StringObject = {[key: string]: string};\n\nexport type AnyObject = {[key: string]: any};\n\nexport type VamtigerSupportFile = 'vamtiger-es2015-support';\n\nexport type VamtigerFormDataSupportFormFieldValueKey = keyof typeof VamtigerFormDataSupportFormFieldValue;\n\nexport type VamtigerSupport =  {\n    [K in VamtigerSupportFile]?: IUpdateBrowserSupport;\n}\n\nexport type VamtigerContactResolve = (response: AWS.SNS.PublishResponse) => void;\n\nexport type VamtigerContactReject = (error: AWS.AWSError) => void;\n\nexport interface ISetBrowserSupportMetaElement {\n    support: Support;\n    primary?: boolean;\n}\n\nexport interface IUpdateBrowserSupport {\n    supportFile: string;\n    supported?: boolean;\n    polyfill?: string;\n    polyfills?: string[];\n    polyfillChain?: string[][]\n    wait?: boolean;\n    error?: string;\n}\n\nexport interface IUpdateBrowserSupportLoadScripts {\n    polyfills: IUpdateBrowserSupport['polyfills'];\n}\n\nexport interface IGetSupportUrls {\n    supportType: SupportType;\n}\n\nexport interface ILoadNextSupport {\n    supportType: SupportType;\n}\n\nexport interface IVamtigerContactParams {\n    template: string;\n    subject: string;\n    origin: string;\n}\n\nexport interface IVamtigerFormSupport {\n    form: string;\n    field?: IVamtigerFormSupportFormField;\n}\n\nexport interface IVamtigerFormSupportFormField {\n    selector: string;\n    name: string;\n    value?: VamtigerFormDataSupportFormFieldValueKey;\n}\n\ndeclare global {\n    interface Window extends VamtigerSupport {\n        [ElementId.vamtigerBrowserSupport]: HTMLMetaElement,\n        VamtigerBrowserSupport: (params: IUpdateBrowserSupport) => void;\n        VamtigerContact: (params: IVamtigerContactParams) => Promise<AWS.SNS.PublishResponse>;\n        _VamtigerContact_: (params: any) => void;\n        VamtigerForm: (params: IVamtigerFormSupport) => Promise<AnyObject>;\n        AWS: typeof AWS;\n    }\n}\n\nexport const supportTypes = Object.keys(SupportType) as SupportType[];\n\nexport const regex = {\n    leadingData: /^data/,\n    trailingSupport: /(.*?Support)(Primary)?$/,\n    supportScript: /vamtiger(-\\w+)+-(support|polyfill)/,\n    distTag: /(\\d|latest)$/\n}\n\nexport const stringConstant = Object.assign(StringConstant, {\n    365080655670: 365080655670\n});","import {\n    MetaElementBrowserSupportAttribute,\n    MetaElementAttribute,\n    Support ,\n    StringConstant,\n    StringObject,\n    regex,\n    SupportType,\n    LoadOnComplete,\n    LoadOnCompleteType,\n    stringConstant,\n    Region\n} from './types';\n\nconst { vamtiger, jsExtension } = StringConstant;\nconst { leadingData } = regex;\nconst supportKeys = Object.keys(MetaElementBrowserSupportAttribute) as Support[];\n\nexport const dependencies = [\n    'https://unpkg.com/vamtiger-browser-method@latest'\n];\n\nexport const primarySupport = new Set<string>([\n    'es2015Support'\n]);\n\nexport const supportScript: StringObject = Object.assign({} as StringObject, MetaElementBrowserSupportAttribute);\n\nexport const loadSupport = {\n    parallel: new Set([\n        SupportType.primary,\n        SupportType.secondary\n    ]),\n    series: new Set([\n\n    ])\n};\n\nexport const supportDone = Array.from(new Set([\n    MetaElementAttribute.supported,\n    MetaElementAttribute.unsupported\n]));\n\nexport const loadOnComplete = Array.from(new Set(\n    Object.keys(LoadOnComplete) as LoadOnCompleteType[]\n))\n\nexport const jsonFormatConfig = {\n    format: 'json'\n};\n\nexport const vc = gvc();\n\nsupportKeys.forEach(key => supportScript[key] = supportScript[key].replace(leadingData, vamtiger) + jsExtension);\n\nfunction gvc() {\n    const {\n        arn: a,\n        aws: b,\n        sns: c,\n        '365080655670': e,\n        'vamtiger-contact': f,\n        colon: g,\n        '5e5164d3': h,\n        cc71: i,\n        '4e5b': j,\n        '9c34': k,\n        '042fe735f31c': l,\n        hyphen: m\n    } = stringConstant;\n    const { usWest2: d } = Region;\n    const z = [\n        a,\n        b,\n        c,\n        d,\n        e,\n        f\n    ].join(g)\n    const x = [\n        d,\n        [\n            h,\n            i,\n            j,\n            k,\n            l\n        ].join(m)\n    ].join(g);\n    const y = {\n        z: Array.from(z),\n        x: Array.from(x),\n        y: Array.from(d)\n    };\n\n    return y;\n}","import { IVamtigerContactParams, VamtigerContactResolve, VamtigerContactReject } from './types';\nimport { vc } from './config';\n\nconst { AWS, _VamtigerContact_: gvc, VamtigerContact } = window;\nconst { config, SNS, CognitoIdentityCredentials: Credentials } = AWS;\nconst { origin, href } = location;\nconst { stringify } = JSON;\nconst { x, y, z} = gvc(vc) as any;\nconst Subject = `Vamtiger contact: ${href}`;\nconst region = y;\nconst credentials = new Credentials({\n    IdentityPoolId: x\n});\n\nObject.assign(config, { region, credentials });\n\nconst sns = new SNS();\n\nfunction vamtigerContact({ subject, template }: IVamtigerContactParams, resolve: VamtigerContactResolve, reject: VamtigerContactReject) {\n    const Message = stringify({\n        subject,\n        template,\n        origin: href\n    });\n    const params = {\n        Message,\n        Subject,\n        TopicArn: z\n    };\n\n    sns.publish(params, (error, response) => error ? reject(error) : resolve(response));\n}\n\nif (!VamtigerContact) {\n    window.VamtigerContact = (params) => new Promise((resolve, reject) => vamtigerContact(params, resolve, reject));\n}"],"names":["StringConstant","Region","ElmentName","ElementId","ElementAttribute","MetaElementAttribute","MetaElementBrowserSupportAttribute","Selector","ErrorMessage","NpmScript","SupportType","LoadOnComplete","VamtigerFormDataSupportFormFieldValue","DocumentDataAttribute","SupportFile","Polyfill","stringConstant","Object","assign","365080655670","vamtiger","jsExtension","leadingData","supportKeys","keys","supportScript","vc","Set","primary","secondary","Array","from","supported","unsupported","a","b","c","e","f","g","h","i","j","k","l","m","d","z","join","x","y","gvc","forEach","key","replace","AWS","VamtigerContact","config","SNS","Credentials","href","stringify","_a","Subject","region","credentials","IdentityPoolId","sns","window","params","Promise","resolve","reject","subject","template","Message","origin","TopicArn","publish","error","response","vamtigerContact"],"mappings":"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"}