{"version":3,"file":"vamtiger-browser-support.js","sources":["../source/types.ts","../source/config.ts","../source/get-support-urls.ts","../source/load-scripts.ts","../source/load-support.ts","../source/load-next-support.ts","../source/update-browser-support.ts","../source/set-meta-element.ts","../source/set-browser-support-meta-element.ts","../source/set-browser-support-meta-elements.ts","../source/is-legacy.ts","../source/load-dependencies.ts","../source/is-bot.ts","../source/set-browser-data.ts","../source/vamtiger-browser-support.ts"],"sourcesContent":["import * as tslib from '../node_modules/tslib/tslib';\nimport * as VamtigerBrowserMethodTypes from 'vamtiger-browser-method/build/types';\nimport * as AWS from 'aws-sdk';\n\nexport enum StringConstant {\n    nothing = '',\n    build = 'build',\n    vamtiger = 'vamtiger',\n    slash = '/',\n    jsExtension = '.js',\n    bashAnd = '&&',\n    arn = 'arn',\n    sns = 'sns',\n    aws = 'aws',\n    colon = ':',\n    hyphen = '-',\n    'vamtiger-contact' = 'vamtiger-contact',\n    '5e5164d3' = '5e5164d3',\n    cc71 = 'cc71',\n    '4e5b' = '4e5b',\n    '9c34' = '9c34',\n    '042fe735f31c' = '042fe735f31c'\n}\n\nexport enum Region {\n    usWest2= 'us-west-2'\n}\n\nexport enum ElmentName {\n    meta = 'meta',\n    script = 'script'\n}\n\nexport enum ElementId {\n    vamtigerBrowserSupport = 'vamtiger-browser-support'\n}\n\nexport enum ElementAttribute {\n    id = 'id'\n}\n\nexport enum MetaElementAttribute {\n    baseUrl = 'baseUrl',\n    name = 'name',\n    url = 'url',\n    primary = 'primary',\n    loaded = 'loaded',\n    supported = 'supported',\n    unsupported = 'unsupported',\n    error = 'error',\n    polyfill = 'polyfill',\n    loadCritical = 'loadCritical',\n    load = 'load',\n    wait = 'wait'\n}\n\nexport enum MetaElementBrowserSupportAttribute {\n    botSupport = 'data-bot-support',\n    es2015Support = 'data-es2015-support',\n    elementQuerySupport = 'data-element-query-support',\n    webComponentSupport = 'data-web-component-support',\n    fetchSupport = 'data-fetch-support',\n    awsSupport = 'data-aws-support',\n    contactSupport = 'data-contact-support'\n}\n\nexport enum Selector {\n    vamtigerBrowserSupportScript = 'script[src*=\"vamtiger-browser-support\"]',\n    vamtigerBrowserMethodJsonJs = '[src$=\"vamtiger-browser-method.js.json.js\"]',\n    vamtigerBrowserMethodJson = '[data-name$=\"vamtiger-browser-method.js.json\"]'\n}\n\nexport enum ScriptUrl {\n    vamtigerBrowserMethod = 'https://vamtiger-project.github.io/vamtiger-browser-method/build/vamtiger-browser-method.js',\n    vamtigerBrowserMethodJsonJs = 'https://vamtiger-project.github.io/vamtiger-browser-method/build/vamtiger-browser-method.js.json.js',\n    tsLib = 'https://cdn.jsdelivr.net/npm/tslib@latest'\n}\n\nexport enum ErrorMessage {\n    notBrowser = 'This is not a web browser',\n    noFormForSelector = 'No Form for Selector',\n    noFieldInFormForSelector = 'No Field in Form for Selector',\n    objectAssignNotSupported = 'Object.assign is not supported',\n    arrayFromNotSupported = 'Array.from is not supported',\n    destructringAssignmentNotSupported = 'Destructuring Assignment is not supported',\n    arrowFunctionsNotSupported = 'Arrow functions are not supported'\n}\n\nexport enum NpmScript {\n    bundleSource = 'bundle-source'\n}\n\nexport enum SupportType {\n    primary = 'primary',\n    secondary = 'secondary'\n}\n\nexport enum LoadOnComplete {\n    loadCritical = 'loadCritical',\n    load = 'load'\n}\n\nexport enum VamtigerFormDataSupportFormFieldValue {\n    innerHTML = 'innerHTML'\n}\n\nexport enum DocumentDataAttribute {\n    touchSupport = 'vamtigerTouchSupport',\n    bot = 'vamtigerBot',\n    legacy = 'vamtigerLegacy',\n    textMode = 'vamtigerTextMode'\n}\n\nexport enum SupportFile {\n    elementQuery = 'vamtiger-element-query-support'\n}\n\nexport enum Polyfill {\n    elementQuery = 'https://cdn.jsdelivr.net/npm/eqcss@latest/EQCSS.min.js'\n}\n\nexport type LoadOnCompleteType  = keyof typeof LoadOnComplete;\n\nexport type Support = keyof typeof MetaElementBrowserSupportAttribute;\n\nexport type SupportTypeKey = keyof typeof SupportType;\n\nexport type StringObject = {[key: string]: string};\n\nexport type AnyObject = {[key: string]: any};\n\nexport type VamtigerSupportFile = 'vamtiger-es2015-support';\n\nexport type VamtigerFormDataSupportFormFieldValueKey = keyof typeof VamtigerFormDataSupportFormFieldValue;\n\nexport type TsLibType = typeof tslib;\n\nexport type TsLibKey = keyof TsLibType;\n\nexport type TsLib = {\n    [K in TsLibKey]: TsLibType[K]\n}\n\nexport type VamtigerSupport =  {\n    [K in VamtigerSupportFile]?: IUpdateBrowserSupport;\n}\n\nexport type VamtigerContactResolve = (response: AWS.SNS.PublishResponse) => void;\n\nexport type VamtigerContactReject = (error: AWS.AWSError) => void;\n\nexport interface ISetBrowserSupportMetaElement {\n    support: Support;\n    primary?: boolean;\n}\n\nexport interface IUpdateBrowserSupport {\n    supportFile: string;\n    supported?: boolean;\n    polyfill?: string;\n    polyfills?: string[];\n    polyfillChain?: string[][]\n    wait?: boolean;\n    error?: string;\n}\n\nexport interface IUpdateBrowserSupportLoadScripts {\n    polyfills: IUpdateBrowserSupport['polyfills'];\n}\n\nexport interface IGetSupportUrls {\n    supportType: SupportType;\n}\n\nexport interface ILoadNextSupport {\n    supportType: SupportType;\n}\n\nexport interface IVamtigerContactParams {\n    template: string;\n    subject: string;\n    origin: string;\n}\n\nexport interface IVamtigerFormSupport {\n    form: string;\n    field?: IVamtigerFormSupportFormField;\n}\n\nexport interface IVamtigerFormSupportFormField {\n    selector: string;\n    name: string;\n    value?: VamtigerFormDataSupportFormFieldValueKey;\n}\n\ndeclare global {\n    interface Window extends VamtigerSupport, TsLib {\n        [ElementId.vamtigerBrowserSupport]: HTMLMetaElement,\n        VamtigerBrowserSupport: (params: IUpdateBrowserSupport) => void;\n        VamtigerContact: (params: IVamtigerContactParams) => Promise<AWS.SNS.PublishResponse>;\n        _VamtigerContact_: (params: any) => void;\n        VamtigerForm: (params: IVamtigerFormSupport) => Promise<AnyObject>;\n        AWS: typeof AWS;\n    }\n}\n\nexport const supportTypes = Object.keys(SupportType) as SupportType[];\n\nexport const regex = {\n    leadingData: /^data/,\n    trailingSupport: /(.*?Support)(Primary)?$/,\n    supportScript: /vamtiger(-\\w+)+-(support|polyfill)/,\n    distTag: /(\\d|latest)$/,\n    bot: /bot|google|baidu|bing|msn|duckduckbot|teoma|slurp|yandex|googlebot|google-structured-data-testing-tool|bingbot|linkedinbot|mediapartners-google/i\n}\n\nexport const stringConstant = {\n    ...StringConstant,\n    365080655670: 365080655670\n};\n\nexport const selector = {\n    vamtigerBrowserMethod: `script[src=\"${ScriptUrl.vamtigerBrowserMethod}\"]`\n}","import {\n    MetaElementBrowserSupportAttribute,\n    MetaElementAttribute,\n    Support ,\n    StringConstant,\n    StringObject,\n    regex,\n    SupportType,\n    LoadOnComplete,\n    LoadOnCompleteType,\n    stringConstant,\n    Region\n} from './types';\n\nconst { vamtiger, jsExtension, nothing } = StringConstant;\nconst { leadingData } = regex;\nconst supportKeys = Object.keys(MetaElementBrowserSupportAttribute) as Support[];\n\nexport const dependencies = [] as string[];\n\nexport const legacyDependencies = [\n    [\n        'https://cdn.jsdelivr.net/npm/es5-shim@latest/es5-shim.min.js',\n        'https://cdn.jsdelivr.net/npm/es6-object-assign/dist/object-assign.min.js'\n    ],\n    [\n        'https://cdn.jsdelivr.net/npm/es6-shim@latest/es6-shim.min.js',\n    ],\n    [\n        'https://cdn.jsdelivr.net/npm/babel-polyfill@latest/dist/polyfill.min.js',\n        'https://cdn.jsdelivr.net/npm/@babel/standalone@latest/babel.min.js'\n    ]\n];\n\nexport const primarySupport = new Set<string>([\n    'botSupport',\n    'es2015Support'\n]);\n\nexport const supportScript: StringObject = {\n    ...MetaElementBrowserSupportAttribute\n};\n\nexport const loadSupport = {\n    parallel: new Set([\n        SupportType.primary,\n        SupportType.secondary\n    ]),\n    series: new Set([\n\n    ])\n};\n\nexport const supportDone = [\n    MetaElementAttribute.supported,\n    MetaElementAttribute.unsupported\n];\n\nexport const loadOnComplete = Object.keys(LoadOnComplete) as LoadOnCompleteType[];\n\nexport const jsonFormatConfig = {\n    format: 'json'\n};\n\nexport const vc = gvc();\n\nsupportKeys.forEach(key => supportScript[key] = supportScript[key].replace(leadingData, vamtiger) + jsExtension);\n\nfunction gvc() {\n    const {\n        arn: a,\n        aws: b,\n        sns: c,\n        '365080655670': e,\n        'vamtiger-contact': f,\n        colon: g,\n        '5e5164d3': h,\n        cc71: i,\n        '4e5b': j,\n        '9c34': k,\n        '042fe735f31c': l,\n        hyphen: m\n    } = stringConstant;\n    const { usWest2: d } = Region;\n    const z = [\n        a,\n        b,\n        c,\n        d,\n        e,\n        f\n    ].join(g)\n    const x = [\n        d,\n        [\n            h,\n            i,\n            j,\n            k,\n            l\n        ].join(m)\n    ].join(g);\n    const y = {\n        z: z.split(nothing),\n        x: x.split(nothing),\n        y: d.split(nothing)\n    };\n\n    return y;\n}","import { IGetSupportUrls, ElementId } from './types';\n\nconst { vamtigerBrowserSupport: vamtigerBrowserSupportId } = ElementId;\n\nexport default function({ supportType }: IGetSupportUrls) {\n    const { [vamtigerBrowserSupportId]: vamtigerBrowserSupport  } = window;\n    const urls = new Set<string>();\n    const elements = Array.from(vamtigerBrowserSupport.children) as HTMLMetaElement[];\n\n    let data: DOMStringMap;\n\n    elements.forEach(element => {\n        data = element.dataset;\n\n        if (data.hasOwnProperty(supportType)) {\n            urls.add(data.url);\n        }\n    });\n\n    return Array.from(urls);\n}","import { ElementId } from './types';\nimport { loadOnComplete } from './config';\n\nconst { vamtigerBrowserSupport: vamtigerBrowserSupportId } = ElementId;\n\nexport default async function () {\n    const { VamtigerBrowserMethod } = window;\n    const { loadScript } = VamtigerBrowserMethod;\n    const { [vamtigerBrowserSupportId]: vamtigerBrowserSupport  } = window;\n    const scripts = [] as HTMLScriptElement[];\n    const supportUrls = loadOnComplete\n        .map(key => vamtigerBrowserSupport.dataset[key])\n        .filter(url => url);\n    const loadScripts = supportUrls.reduce(\n        (loadSupport, src) => loadSupport\n            .then(() => loadScript({ src }))\n            .then(script => scripts.push(script) && scripts),\n        Promise.resolve(scripts)\n    );\n\n    return loadScripts;\n}","import { supportTypes } from './types';\nimport { loadSupport } from './config';\nimport getSupportUrls from './get-support-urls';\nimport loadScripts from './load-scripts';\nimport loadNextSupport from './load-next-support';\n\nconst { parallel } = loadSupport;\n\nlet index = 0;\nlet done = false;\n\nexport default async function () {\n    const { VamtigerBrowserMethod } = window;\n    const { loadScript } = VamtigerBrowserMethod;\n    const supportType = supportTypes[index];\n    const supportUrls = getSupportUrls({ supportType });\n    const supportScripts = [] as HTMLScriptElement[];\n\n    let scripts: Promise<typeof supportScripts>;\n\n    if (parallel.has(supportType)) {\n        scripts = Promise.all(supportUrls.map(src => loadScript({ src })));\n\n        if (!supportUrls.length) {\n            loadNextSupport({ supportType });\n        }\n    } else if (supportType) {\n        scripts = supportUrls.reduce(\n            (loadSupport, src) => loadSupport\n                .then(() => loadScript({ src }))\n                .then(script => supportScripts.push(script) && supportScripts),\n            Promise.resolve(supportScripts)\n        );\n    } else if (!supportType && !done) {\n        done = true;\n\n        scripts = loadScripts();\n    }\n\n    index++;\n\n    return scripts;\n}","import {\n    ILoadNextSupport,\n    ElementId,\n    MetaElementAttribute\n} from './types';\nimport { supportDone } from './config';\nimport loadSupport from './load-support';\n\nconst { vamtigerBrowserSupport: vamtigerBrowserSupportId } = ElementId;\nconst { wait } = MetaElementAttribute;\n\nexport default function ({ supportType}: ILoadNextSupport) {\n    const { [vamtigerBrowserSupportId]: vamtigerBrowserSupport  } = window;\n    const supportTypeSelector = `meta[data-${supportType}]`;\n    const supportTypeMetaElements = Array.from(vamtigerBrowserSupport.querySelectorAll(supportTypeSelector)) as HTMLMetaElement[];\n    const supportTypeMetaElementsDone = supportTypeMetaElements\n        .filter(element => supportDone.some(key => element.dataset.hasOwnProperty(key)))\n        .filter(element => !element.dataset.hasOwnProperty(wait));\n    const loadNextSupport = supportTypeMetaElements && supportTypeMetaElements.length === supportTypeMetaElementsDone.length;\n\n    if (loadNextSupport) {\n        loadSupport().catch(console.warn);\n    }\n}","import {\n    IUpdateBrowserSupport,\n    ElementId,\n    StringConstant,\n    SupportType,\n    SupportTypeKey\n} from './types';\nimport loadNextSupport from './load-next-support';\n\nconst { vamtigerBrowserSupport: vamtigerBrowserSupportId } = ElementId;\nconst { nothing } = StringConstant;\nconst supportTypes = Object.keys(SupportType) as SupportTypeKey[]\n\nexport default async function updateBrowserSupport({ supportFile, supported, polyfill, polyfills, polyfillChain, error, wait }: IUpdateBrowserSupport) {\n    const {\n        [vamtigerBrowserSupportId]: vamtigerBrowserSupport,\n        VamtigerBrowserSupport,\n        VamtigerBrowserMethod\n    } = window;\n    const {\n        loadScript,\n        loadScripts,\n        loadScriptsSequentially\n    } = VamtigerBrowserMethod;\n    const selector = `[data-url*=${supportFile}]`;\n    const metaElement = vamtigerBrowserSupport.querySelector(selector) as HTMLMetaElement;\n    const { dataset: data } = metaElement\n    const supportType = supportTypes.find(supportType => data.hasOwnProperty(supportType)) as SupportType;\n\n    if (supported) {\n        data.supported = nothing;\n    } else {\n        data.unsupported = nothing;\n    }\n\n    if (wait) {\n        data.wait = nothing;\n    } else {\n        delete data.wait;\n    }\n\n    if (error) {\n        data.error = error;\n    }\n\n    if (polyfill) {\n        data.polyfill = polyfill;\n\n        loadScript({ src: polyfill })\n            .then(() => loadNextSupport({ supportType }))\n    } else if (polyfillChain) {\n        loadScriptsSequentially(polyfillChain.map(srcs => srcs.map(src => ({ src }))))\n            .then(scripts => scripts.forEach(({ src: polyfill }, index) => data[`polyfill-${index + 1}`] = polyfill))\n            .then(() => loadNextSupport({ supportType }));\n    } else if (polyfills) {\n        loadScripts(polyfills.map(polyfill => ({ src: polyfill })))\n            .then(scripts => scripts.forEach(({ src: polyfill }, index) => data[`polyfill-${index + 1}`] = polyfill))\n            .then(() => loadNextSupport({ supportType }));\n    } else {\n        loadNextSupport({ supportType });\n    }\n}\n\nif (!window.VamtigerBrowserSupport) {\n    window.VamtigerBrowserSupport = updateBrowserSupport;\n}","import {\n    ElementId,\n    ElmentName,\n    ElementAttribute,\n    MetaElementAttribute,\n    MetaElementBrowserSupportAttribute,\n    StringConstant,\n    Selector,\n    regex\n} from './types';\n\nconst { id } = ElementAttribute;\nconst { vamtigerBrowserSupport } = ElementId;\nconst { baseUrl } = MetaElementAttribute;\nconst { es2015Support }  = MetaElementBrowserSupportAttribute;\nconst { nothing, slash, build } = StringConstant;\nconst { vamtigerBrowserSupportScript: selector } = Selector;\nconst { distTag } = regex;\n\nexport default function () {\n    const { head } = document;\n    const { firstChild } = head;\n    const metaElement = document.createElement(ElmentName.meta);\n    const vamtigerBrowserSupportScript = document.querySelector(selector) as HTMLScriptElement;\n    const vamtigerBrowserSupportScriptPaths = vamtigerBrowserSupportScript.src.split(slash);\n    const baseUrlPaths = new Set(vamtigerBrowserSupportScriptPaths\n        .slice(0, vamtigerBrowserSupportScriptPaths.length - 1));\n    const baseUrlPath = vamtigerBrowserSupportScript.src.match(distTag)\n        && `${vamtigerBrowserSupportScript.src}/build`\n        || Array.from(baseUrlPaths).join(slash);\n\n    metaElement.setAttribute(id, vamtigerBrowserSupport);\n\n    vamtigerBrowserSupportScript && Object.keys(vamtigerBrowserSupportScript.dataset).forEach(key => {\n        if (!metaElement.dataset[key]) {\n            metaElement.dataset[key] = vamtigerBrowserSupportScript.dataset[key];\n        }\n    });\n\n    metaElement.dataset[baseUrl] = baseUrlPath;\n\n    head.insertBefore(metaElement, firstChild);\n}","import {\n    ISetBrowserSupportMetaElement,\n    ElementId,\n    StringConstant,\n    ElmentName,\n    MetaElementAttribute,\n    regex,\n    SupportType\n} from './types';\nimport { supportScript } from './config'\n\nconst { vamtigerBrowserSupport: vamtigerBrowserSupportId } = ElementId;\nconst { slash, nothing } = StringConstant;\nconst { meta } = ElmentName;\nconst { trailingSupport } = regex;\n\nexport default function ({ support: supportDataKey }: ISetBrowserSupportMetaElement) {\n    const { [vamtigerBrowserSupportId]: vamtigerBrowserSupport } = window;\n    const { dataset } = vamtigerBrowserSupport;\n    const { baseUrl } = dataset;\n    const [, support, supportType] = supportDataKey.match(trailingSupport) || [] as string[];\n    const currentSupportScript = supportScript[support];\n    const scriptUrl = [\n        baseUrl,\n        currentSupportScript\n    ].join(slash);\n    const metaElement = document.createElement(meta);\n\n    metaElement.dataset.name = support;\n\n    metaElement.dataset.url = scriptUrl;\n\n    if (supportType) {\n        metaElement.dataset[supportType.toLowerCase()] = nothing;\n    } else {\n        metaElement.dataset[SupportType.secondary] = nothing;\n    }\n\n    vamtigerBrowserSupport.appendChild(metaElement);\n};","import { ElementId, Support, regex } from './types';\nimport { primarySupport } from './config';\nimport setBrowserSupportMetaElement from'./set-browser-support-meta-element';\n\nconst { vamtigerBrowserSupport: vamtigerBrowserSupportId } = ElementId;\nconst { trailingSupport } = regex;\n\nexport default function () {\n    const { [ vamtigerBrowserSupportId ]: vamtigerBrowserSupport } = window;\n    const { dataset } = vamtigerBrowserSupport;\n    const supportKey = Object\n        .keys(dataset)\n        .filter(key => key.match(trailingSupport))\n        .sort() as Support[];\n\n    supportKey.forEach(support => setBrowserSupportMetaElement({\n        support,\n        primary: primarySupport.has(support)\n    }));\n}","import {\n    ErrorMessage\n} from './types';\n\nconst {\n    objectAssignNotSupported,\n    arrayFromNotSupported,\n    destructringAssignmentNotSupported,\n    arrowFunctionsNotSupported\n} = ErrorMessage;\n\nlet legacy: boolean;\n\nexport default async function () {\n    const isLegacy = legacy === undefined ? await Promise\n        .all([\n            objectAssign(),\n            arrayFrom(),\n            destructringAssignment(),\n            arrowFunctions()\n        ])\n        .then(results => !results.every(result => result))\n        :\n        legacy;\n\n    legacy = isLegacy ? true : false;\n\n    return legacy;\n}\n\nfunction objectAssign() {return new Promise((resolve, reject) => {\n    let result = false;\n\n    try {\n        eval(`Object.assign({result: false}, {result: true}).result`);\n        result = true;\n    } catch(error) {\n        handleError(new Error(objectAssignNotSupported));\n    }\n\n    resolve(result);\n})}\n\nfunction arrayFrom() {return new Promise((resolve, reject) => {\n    let result = false;\n\n    try {\n        eval(`Array.from('1234').length === 4`);\n        result = true;\n    } catch(error) {\n        handleError(new Error(arrayFromNotSupported));\n    }\n\n    resolve(result);\n})}\n\nfunction destructringAssignment() {return new Promise((resolve, reject) => {\n    let result = false;\n\n    try {\n        eval(`\n            let object = {\n                result: true\n            };\n            let { result: currentResult } = object;\n        `);\n\n        result = true;\n    } catch(error) {\n        handleError(new Error(destructringAssignmentNotSupported));\n    }\n\n    resolve(result);\n})}\n\nfunction arrowFunctions() {return new Promise((resolve, reject) => {\n    let result = false;\n\n    try {\n        eval(`(() => true)()`);\n        result = true;\n    } catch(error) {\n        handleError(new Error(arrowFunctionsNotSupported));\n    }\n\n    resolve(result);\n})}\n\nfunction handleError(error: Error) {\n    console.warn(error.message);\n}","import { IJsonScriptData } from 'vamtiger-browser-method/build/types';\nimport {\n    Selector,\n    selector,\n    ScriptUrl\n} from './types';\nimport {\n    dependencies as dependencyUrls,\n    legacyDependencies\n} from './config';\nimport isLegacy from './is-legacy';\n\nconst { parse } = JSON;\n\nexport default async function() {\n    await loadLegacyDependencies();\n    await loadDependencies();\n}\n\nasync function loadLegacyDependencies() {\n    const legacy = await isLegacy();\n    const urlsGroups = legacy && legacyDependencies || [];\n\n    await Promise.all(urlsGroups.map(urls => Promise.all(urls.map(url => loadDependency(url).catch(handleError)))));\n}\n\nasync function loadDependencies() {\n    const legacy = await isLegacy();\n    const urls = ([legacy && ScriptUrl.vamtigerBrowserMethod || ScriptUrl.vamtigerBrowserMethodJsonJs] as string [])\n        .concat(dependencyUrls)\n        .filter(url => url);\n    const dependencies = await Promise.all(urls.map(loadDependency));\n\n    await loadVamtigerBrowserMethod();\n\n    return dependencies;\n}\n\nfunction loadDependency(src: string) {return new Promise((resolve: (script?: HTMLScriptElement) => void, reject) => {\n    const { head } = document;\n    const selector = `[src=\"${src}\"]`;\n    const existingScript = head.querySelector<HTMLScriptElement>(selector);\n    const script = !existingScript && document.createElement('script');\n\n    if (script) {\n        script.addEventListener('load', event => resolve(script));\n        script.addEventListener('error', reject);\n\n        script.src = src;\n\n        head.appendChild(script);\n    } else if (existingScript) {\n        resolve(existingScript);\n    } else {\n        resolve();\n    }\n})}\n\nfunction loadVamtigerBrowserMethod() {return new Promise(async (resolve, reject) => {\n    const { head } = document;\n    const selector = Selector.vamtigerBrowserMethodJson;\n    const script = document.querySelector<HTMLScriptElement>(selector);\n    const jsonText = script && script.innerHTML;\n    const data = jsonText && parse(jsonText) as IJsonScriptData;\n    const js = data && data.text;\n    const vamtigerBrowserMethodScript = document.createElement('script');\n\n    if (js) {\n        vamtigerBrowserMethodScript.dataset.name = ScriptUrl.vamtigerBrowserMethod;\n        vamtigerBrowserMethodScript.innerHTML = js;\n\n        head.appendChild(vamtigerBrowserMethodScript);\n    }\n\n    addEventListener('vamtigerBrowserMethodReady', resolve);\n})}\n\nfunction handleError(error: Error) {\n    console.warn(error.name);\n    console.warn(error.message);\n    console.warn(error.stack);\n}","import {\n    regex\n} from './types';\n\nconst { bot } = regex;\n\nlet log = false\n\nexport default function () {\n    const { userAgent, webdriver } = navigator;\n    const isBot = webdriver || navigator && Boolean(userAgent.match(bot));\n\n    return isBot;\n}","import {\n    DocumentDataAttribute,\n    StringConstant\n} from './types';\nimport isBot from './is-bot';\nimport isLegacy from './is-legacy';\n\nconst { nothing } = StringConstant;\n\nexport default async function () {\n    const { ontouchstart, document } = window;\n    const { documentElement } = document;\n    const { dataset } = documentElement;\n    const { maxTouchPoints, msMaxTouchPoints } = navigator;\n    const touchSupport = (ontouchstart\n        || window.hasOwnProperty('DocumentTouch')\n        || maxTouchPoints\n        || msMaxTouchPoints) ? true : false;\n    const bot = isBot();\n    const legacy = await isLegacy();\n    const attributes = [\n        {\n            key: DocumentDataAttribute.touchSupport,\n            value: touchSupport\n        },\n        {\n            key: DocumentDataAttribute.bot,\n            value: bot\n        },\n        {\n            key: DocumentDataAttribute.legacy,\n            value: legacy\n        },\n        {\n            key: DocumentDataAttribute.textMode,\n            value: bot\n        },\n    ];\n\n    attributes.forEach(({key, value}) => {\n        if (key && value) {\n            dataset[key] = nothing\n        }\n    });\n}","import { ErrorMessage } from './types';\nexport * from './update-browser-support';\nimport setMetaElement from './set-meta-element';\nimport setBrowserSupportMetaElements from'./set-browser-support-meta-elements';\nimport loadSupport from './load-support';\nimport loadDependencies from './load-dependencies';\nimport setBrowserData from './set-browser-data';\n\nasync function handleLoad(event: Event) {\n    removeEventListener('load', handleLoad);\n\n    await loadDependencies();\n\n    setMetaElement();\n\n    setBrowserSupportMetaElements();\n\n    loadSupport().catch(handleError);\n\n    setBrowserData();\n}\n\nfunction handleError(error: Error) {\n    console.warn(error);\n    console.warn(notBrowser);\n}\n\nconst { notBrowser } = ErrorMessage;\n\naddEventListener('load', handleLoad);"],"names":["StringConstant","Region","ElmentName","ElementId","ElementAttribute","MetaElementAttribute","MetaElementBrowserSupportAttribute","Selector","ScriptUrl","ErrorMessage","NpmScript","SupportType","LoadOnComplete","VamtigerFormDataSupportFormFieldValue","DocumentDataAttribute","SupportFile","Polyfill","supportTypes","Object","keys","regex","leadingData","trailingSupport","supportScript","distTag","bot","stringConstant","365080655670","selector","vamtigerBrowserMethod","vamtiger","jsExtension","nothing","supportKeys","dependencies","legacyDependencies","primarySupport","Set","loadSupport","parallel","primary","secondary","series","supportDone","supported","unsupported","loadOnComplete","vc","gvc","a","b","c","e","f","g","h","i","j","k","l","m","d","z","join","x","split","y","forEach","key","replace","vamtigerBrowserSupportId","_a","data","supportType","vamtigerBrowserSupport","urls","Array","from","children","element","dataset","hasOwnProperty","add","url","VamtigerBrowserMethod","window","loadScript","scripts","supportUrls","map","filter","reduce","src","then","script","push","Promise","resolve","index","done","getSupportUrls","supportScripts","has","all","length","loadNextSupport","loadScripts","wait","supportTypeSelector","supportTypeMetaElements","querySelectorAll","supportTypeMetaElementsDone","some","catch","console","warn","updateBrowserSupport","supportFile","polyfill","polyfills","polyfillChain","error","loadScriptsSequentially","metaElement","querySelector","find","srcs","VamtigerBrowserSupport","id","baseUrl","es2015Support","slash","build","head","firstChild","document","createElement","meta","vamtigerBrowserSupportScript","vamtigerBrowserSupportScriptPaths","baseUrlPaths","slice","baseUrlPath","match","setAttribute","insertBefore","supportDataKey","_c","support","scriptUrl","name","toLowerCase","appendChild","sort","setBrowserSupportMetaElement","objectAssignNotSupported","arrayFromNotSupported","destructringAssignmentNotSupported","arrowFunctionsNotSupported","legacy","undefined","objectAssign","arrayFrom","destructringAssignment","arrowFunctions","results","every","result","_b","reject","eval","handleError","Error","message","parse","loadLegacyDependencies","loadDependencies","isLegacy","urlsGroups","loadDependency","vamtigerBrowserMethodJsonJs","concat","dependencyUrls","loadVamtigerBrowserMethod","existingScript","addEventListener","event","vamtigerBrowserMethodJson","jsonText","innerHTML","js","text","vamtigerBrowserMethodScript","stack","userAgent","navigator","Boolean","ontouchstart","documentElement","maxTouchPoints","msMaxTouchPoints","touchSupport","isBot","value","textMode","handleLoad","removeEventListener","setMetaElement","setBrowserSupportMetaElements","setBrowserData","notBrowser"],"mappings":"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"}